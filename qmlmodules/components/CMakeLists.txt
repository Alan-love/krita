include(ECMQmlModule)

if (QT_MAJOR_VERSION STREQUAL "6")

    ecm_add_qml_module(kritaqmlcomponents
        URI "org.krita.components"
        VERSION 1.0
        SHARED
        GENERATE_PLUGIN_SOURCE
    )

    target_sources(kritaqmlcomponents
        PRIVATE
            SvgTextLabel.cpp
            SvgTextLabel.h
    )

else ()
    ecm_add_qml_module(kritaqmlcomponents
        URI "org.krita.components"
        VERSION 1.0
        CLASSNAME KritaQmlComponentsPlugin
    )

    target_sources(kritaqmlcomponents
        PRIVATE
            KritaQmlComponentsPlugin.cpp
            KritaQmlComponentsPlugin.h
            SvgTextLabel.cpp
            SvgTextLabel.h
            KisNumParser.cpp
            KisNumParser.h
            KisCubicCurveQMLWrapper.cpp
            KisCubicCurveQMLWrapper.h
    )

endif ()

ecm_target_qml_sources(kritaqmlcomponents SOURCES
    qml/DoubleSpinBox.qml
    
    qml/button/KisGroupButton.qml
    qml/button/KisOptionButtonStrip.qml
    
    qml/overlays/KisWarningOverlay.qml
    qml/overlays/KisSliderOverlay.qml
    qml/tooltip/KisToolTip.qml

    qml/textinput/KisTextInputWithSelectionRange.qml
    qml/textinput/KisTextInputWithPrefixAndSuffix.qml
    
    qml/spinbox/KisParseSpinBoxContentItem.qml
    qml/spinbox/KisIntParseSpinBox.qml
    qml/spinbox/KisDoubleSpinBox.qml
    qml/spinbox/KisDoubleParseSpinBox.qml

    qml/sliderspinbox/KisSliderSpinBoxManipulator.qml
    qml/sliderspinbox/KisSliderSpinBoxRangeSwitch.qml
    qml/sliderspinbox/KisSliderSpinBoxContentItem.qml
    qml/sliderspinbox/KisIntSliderSpinBox.qml
    qml/sliderspinbox/KisDoubleSliderSpinBox.qml

    qml/curvewidget/KisCurveWidget.qml
    qml/angleselector/KisAngleGauge.qml
    qml/angleselector/KisAngleSelector.qml
    qml/angleselector/KisAngleSelectorUtil.js
)

target_link_libraries(kritaqmlcomponents
    PRIVATE
        kritaui
        Qt::Qml
        Qt::Quick
        Qt::QuickControls2
)

ecm_finalize_qml_module(kritaqmlcomponents DESTINATION ${KDE_INSTALL_QMLDIR})

# Note: we don't need ecm_generate_qmltypes, in Qt6 it is autogenerated
# by ecm_finalize_qml_module

# Note: the ecm documentation prescribes this line but it is not needed,
# since all the installation work is done by ecm_finalize_qml_module
#
# install(TARGETS kritaqmlcomponents ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})



